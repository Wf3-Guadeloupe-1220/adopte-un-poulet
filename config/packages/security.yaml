security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        # Définit la façon dont est encodée le mot de passe 
        App\Entity\Famille: plaintext   # pas d'encodage
    providers:
        # Définit quelle classe sera utilisé pour récupérer l'utilisateur depuis la session
        users_in_memory:
            entity:
                class: App\Entity\Famille
                property: email
    role_hierarchy:
        ROLE_FAMILLE: ROLE_USER
        ROLE_FERMIER: [ROLE_USER, ROLE_ADMIN]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\AppLoginAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
